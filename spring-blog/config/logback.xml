<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <!-- You can override this to have a custom pattern -->
    <property name="LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) [%X{username}] %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <property name="LOG_DIR" value="log"/>â€‹

    <!-- Send debug messages to System.out -->
    <!--The appender output to the console console -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender"
              target="System.out">
        <encoder charset="UTF-8">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <target>System.out</target>
    </appender>

    <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>500</queueSize>
        <appender-ref ref="STDOUT" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <!--The appender output destination file -->
    <appender name="FILELOG"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>log/status.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log/status-%d{yyyy-MM-dd}.zip</fileNamePattern>
            <maxHistory>2</maxHistory>
        </rollingPolicy>
        <!-- The encoding format parser -->
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>

    </appender>

    <appender name="ASYNC_FILELOG" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>500</queueSize>
        <appender-ref ref="FILELOG" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <!--The appender output destination file for quotation -->
    <appender name="USER_SERVICE_LOG"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>log/user.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>log/user-%d{yyyy-MM-dd}.zip</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <!-- The encoding format parser -->
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    <appender name="ASYNC_USER_SERVICE_LOG" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>500</queueSize>
        <appender-ref ref="USER_SERVICE_LOG" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- Appender to log to file in a JSON format -->
    <appender name="JSONLOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/status.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/status.json.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "severity": "%level",
                        "service": "${springAppName:-}",
                        "trace": "%X{X-B3-TraceId:-}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent": "%X{X-B3-ParentSpanId:-}",
                        "exportable": "%X{X-Span-Export:-}",
                        "username": "%X{username:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%logger{40}",
                        "requestId": "%X{requestId}",
                        "message": "%message"
                        }
                    </pattern>
                </pattern>
                <stackHash>
                    <fieldName>exception-hash</fieldName>
                </stackHash>
                <stackTrace>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>2048</maxLength>
                        <shortenedClassNameLength>20</shortenedClassNameLength>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>
    <appender name="ASYNC_JSONLOG" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>500</queueSize>
        <appender-ref ref="JSONLOG" />
        <includeCallerData>true</includeCallerData>
    </appender>

    <logger name="id.ten.springblog" level="DEBUG" additivity="true">
        <appender-ref ref="ASYNC_USER_SERVICE_LOG" />
    </logger>

    <!-- By default, the level of the root level is set to DEBUG -->
    <root level="INFO">
        <appender-ref ref="ASYNC_STDOUT" />
        <appender-ref ref="ASYNC_FILELOG" />
        <appender-ref ref="ASYNC_JSONLOG" />
    </root>
</configuration>
